$date
	Tue Jun 16 11:30:58 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test $end
$var wire 8 ! str0 [7:0] $end
$var wire 8 " str1 [7:0] $end
$var wire 8 # str2 [7:0] $end
$var wire 8 $ str3 [7:0] $end
$var reg 32 % word [31:0] $end
$scope module div $end
$var wire 32 & t0 [31:0] $end
$var wire 32 ' t1 [31:0] $end
$var wire 32 ( t2 [31:0] $end
$var wire 32 ) t3 [31:0] $end
$var wire 8 * w0 [7:0] $end
$var wire 8 + w1 [7:0] $end
$var wire 8 , w2 [7:0] $end
$var wire 8 - w3 [7:0] $end
$var wire 32 . word [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10001001000100011001101000100 .
b1000100 -
b110011 ,
b100010 +
b10001 *
b1000100 )
b11001100000000 (
b1000100000000000000000 '
b10001000000000000000000000000 &
b10001001000100011001101000100 %
b1000100 $
b110011 #
b100010 "
b10001 !
$end
#100
