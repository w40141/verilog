$date
	Tue Jun 16 18:33:57 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test $end
$var wire 128 ! key [127:0] $end
$var reg 8 " count [7:0] $end
$var integer 32 # i [31:0] $end
$var reg 128 $ word [127:0] $end
$scope module ex $end
$var wire 8 % count [7:0] $end
$var wire 128 & in [127:0] $end
$var wire 32 ' in0 [31:0] $end
$var wire 32 ( in1 [31:0] $end
$var wire 32 ) in2 [31:0] $end
$var wire 32 * in3 [31:0] $end
$var wire 128 + out [127:0] $end
$var wire 32 , out0 [31:0] $end
$var wire 32 - out1 [31:0] $end
$var wire 32 . out2 [31:0] $end
$var wire 32 / out3 [31:0] $end
$var wire 32 0 rc [31:0] $end
$var wire 32 1 rt [31:0] $end
$var wire 32 2 rw [31:0] $end
$var wire 32 3 sw [31:0] $end
$scope module rcon $end
$var wire 8 4 count [7:0] $end
$var wire 32 5 out [31:0] $end
$upscope $end
$scope module rot $end
$var wire 32 6 in [31:0] $end
$var wire 32 7 in0 [31:0] $end
$var wire 32 8 in1 [31:0] $end
$var wire 32 9 in2 [31:0] $end
$var wire 32 : in3 [31:0] $end
$var wire 32 ; out [31:0] $end
$upscope $end
$scope module sub $end
$var wire 32 < x [31:0] $end
$var wire 8 = x0 [7:0] $end
$var wire 8 > x1 [7:0] $end
$var wire 8 ? x2 [7:0] $end
$var wire 8 @ x3 [7:0] $end
$var wire 32 A y [31:0] $end
$var wire 8 B y0 [7:0] $end
$var wire 8 C y1 [7:0] $end
$var wire 8 D y2 [7:0] $end
$var wire 8 E y3 [7:0] $end
$scope module sub0 $end
$var wire 8 F x [7:0] $end
$var reg 8 G y [7:0] $end
$upscope $end
$scope module sub1 $end
$var wire 8 H x [7:0] $end
$var reg 8 I y [7:0] $end
$upscope $end
$scope module sub2 $end
$var wire 8 J x [7:0] $end
$var reg 8 K y [7:0] $end
$upscope $end
$scope module sub3 $end
$var wire 8 L x [7:0] $end
$var reg 8 M y [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#1100
$dumpvars
b1011 M
b10011110 L
b11100010 K
b111011 J
b1101111 I
b110 H
b111000 G
b1110110 F
b1011 E
b11100010 D
b1101111 C
b111000 B
b111000011011111110001000001011 A
b10011110 @
b111011 ?
b110 >
b1110110 =
b1110110000001100011101110011110 <
b1110110000001100011101110011110 ;
b11101100000000 :
b1100000000000000000 9
b1110110000000000000000000000000 8
b10011110 7
b10011110011101100000011000111011 6
b1101100000000000000000000000000 5
b1011 4
b111000011011111110001000001011 3
b1110110000001100011101110011110 2
b1010100011011111110001000001011 1
b1101100000000000000000000000000 0
b1010011101100010111000101100001 /
b11001101110001110111011101011010 .
b110111000111011000101011001011 -
b10101011000010010100010000011010 ,
b10101011000010010100010000011010001101110001110110001010110010111100110111000111011101110101101001010011101100010111000101100001 +
b10011110011101100000011000111011 *
b11111010110110101111110110010001 )
b10011100000101001100111011010001 (
b11111111011001101010011000010001 '
b11111111011001101010011000010001100111000001010011001110110100011111101011011010111111011001000110011110011101100000011000111011 &
b1011 %
b11111111011001101010011000010001100111000001010011001110110100011111101011011010111111011001000110011110011101100000011000111011 $
b1011 #
b1011 "
b10101011000010010100010000011010001101110001110110001010110010111100110111000111011101110101101001010011101100010111000101100001 !
$end
#1200
b11001000 G
b11001000 B
b11101101 M
b11101101 E
b10100011 I
b10100011 C
b11101111 K
b11001000101000111110111111101101 3
b11001000101000111110111111101101 A
b11101111 D
b10110001 =
b10110001 F
b1010011 @
b1010011 L
b1110001 >
b1110001 H
b1100001 ?
b1100001 J
b10110001011100010110000101010011 2
b10110001011100010110000101010011 ;
b10110001011100010110000101010011 <
b1010011 7
b10110001000000000000000000000000 8
b11100010000000000000000 9
b110000100000000 :
b10111011101010101010101111110111 ,
b10001100101101110010000100111100 -
b1000001011100000101011001100110 .
b10010110000010010011100000111 /
b10111011101010101010101111110111100011001011011100100001001111000100000101110000010101100110011000010010110000010010011100000111 !
b10111011101010101010101111110111100011001011011100100001001111000100000101110000010101100110011000010010110000010010011100000111 +
b10000101000111110111111101101 1
b10101011000010010100010000011010 '
b110111000111011000101011001011 (
b11001101110001110111011101011010 )
b1010011101100010111000101100001 *
b1010011101100010111000101100001 6
b11011000000000000000000000000000 0
b11011000000000000000000000000000 5
b1100 #
b10101011000010010100010000011010001101110001110110001010110010111100110111000111011101110101101001010011101100010111000101100001 $
b10101011000010010100010000011010001101110001110110001010110010111100110111000111011101110101101001010011101100010111000101100001 &
b1100 "
b1100 %
b1100 4
#1300
