$date
	Fri Jun 12 00:49:56 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module mix $end
$var wire 8 ! y0 [7:0] $end
$var wire 8 " y1 [7:0] $end
$var wire 8 # y2 [7:0] $end
$var wire 8 $ y3 [7:0] $end
$var reg 8 % x0 [7:0] $end
$var reg 8 & x1 [7:0] $end
$var reg 8 ' x2 [7:0] $end
$var reg 8 ( x3 [7:0] $end
$scope module pol $end
$var wire 8 ) d00 [7:0] $end
$var wire 8 * d01 [7:0] $end
$var wire 8 + d02 [7:0] $end
$var wire 8 , d03 [7:0] $end
$var wire 8 - d10 [7:0] $end
$var wire 8 . d11 [7:0] $end
$var wire 8 / d12 [7:0] $end
$var wire 8 0 d13 [7:0] $end
$var wire 8 1 d20 [7:0] $end
$var wire 8 2 d21 [7:0] $end
$var wire 8 3 d22 [7:0] $end
$var wire 8 4 d23 [7:0] $end
$var wire 8 5 d30 [7:0] $end
$var wire 8 6 d31 [7:0] $end
$var wire 8 7 d32 [7:0] $end
$var wire 8 8 d33 [7:0] $end
$var wire 8 9 x0 [7:0] $end
$var wire 8 : x1 [7:0] $end
$var wire 8 ; x2 [7:0] $end
$var wire 8 < x3 [7:0] $end
$var wire 8 = y0 [7:0] $end
$var wire 8 > y1 [7:0] $end
$var wire 8 ? y2 [7:0] $end
$var wire 8 @ y3 [7:0] $end
$scope module garoa00 $end
$var wire 15 A c [14:0] $end
$var wire 8 B d [7:0] $end
$var wire 8 C x [7:0] $end
$var wire 8 D y [7:0] $end
$upscope $end
$scope module garoa01 $end
$var wire 15 E c [14:0] $end
$var wire 8 F d [7:0] $end
$var wire 8 G x [7:0] $end
$var wire 8 H y [7:0] $end
$upscope $end
$scope module garoa02 $end
$var wire 15 I c [14:0] $end
$var wire 8 J d [7:0] $end
$var wire 8 K x [7:0] $end
$var wire 8 L y [7:0] $end
$upscope $end
$scope module garoa03 $end
$var wire 15 M c [14:0] $end
$var wire 8 N d [7:0] $end
$var wire 8 O x [7:0] $end
$var wire 8 P y [7:0] $end
$upscope $end
$scope module garoa10 $end
$var wire 15 Q c [14:0] $end
$var wire 8 R d [7:0] $end
$var wire 8 S x [7:0] $end
$var wire 8 T y [7:0] $end
$upscope $end
$scope module garoa11 $end
$var wire 15 U c [14:0] $end
$var wire 8 V d [7:0] $end
$var wire 8 W x [7:0] $end
$var wire 8 X y [7:0] $end
$upscope $end
$scope module garoa12 $end
$var wire 15 Y c [14:0] $end
$var wire 8 Z d [7:0] $end
$var wire 8 [ x [7:0] $end
$var wire 8 \ y [7:0] $end
$upscope $end
$scope module garoa13 $end
$var wire 15 ] c [14:0] $end
$var wire 8 ^ d [7:0] $end
$var wire 8 _ x [7:0] $end
$var wire 8 ` y [7:0] $end
$upscope $end
$scope module garoa20 $end
$var wire 15 a c [14:0] $end
$var wire 8 b d [7:0] $end
$var wire 8 c x [7:0] $end
$var wire 8 d y [7:0] $end
$upscope $end
$scope module garoa21 $end
$var wire 15 e c [14:0] $end
$var wire 8 f d [7:0] $end
$var wire 8 g x [7:0] $end
$var wire 8 h y [7:0] $end
$upscope $end
$scope module garoa22 $end
$var wire 15 i c [14:0] $end
$var wire 8 j d [7:0] $end
$var wire 8 k x [7:0] $end
$var wire 8 l y [7:0] $end
$upscope $end
$scope module garoa23 $end
$var wire 15 m c [14:0] $end
$var wire 8 n d [7:0] $end
$var wire 8 o x [7:0] $end
$var wire 8 p y [7:0] $end
$upscope $end
$scope module garoa30 $end
$var wire 15 q c [14:0] $end
$var wire 8 r d [7:0] $end
$var wire 8 s x [7:0] $end
$var wire 8 t y [7:0] $end
$upscope $end
$scope module garoa31 $end
$var wire 15 u c [14:0] $end
$var wire 8 v d [7:0] $end
$var wire 8 w x [7:0] $end
$var wire 8 x y [7:0] $end
$upscope $end
$scope module garoa32 $end
$var wire 15 y c [14:0] $end
$var wire 8 z d [7:0] $end
$var wire 8 { x [7:0] $end
$var wire 8 | y [7:0] $end
$upscope $end
$scope module garoa33 $end
$var wire 15 } c [14:0] $end
$var wire 8 ~ d [7:0] $end
$var wire 8 !" x [7:0] $end
$var wire 8 "" y [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1110 ""
b1111 !"
bx ~
b0xxxxx001011010 }
b1001 |
b110000 {
bx z
bx01110000 y
b1101 x
b1010110 w
bx v
bx10111110 u
b1011 t
b10010 s
bx r
bx11100110 q
b1011 p
b1111 o
bx n
bx01101001 m
b1110 l
b110000 k
bx j
b0xxxxx111100000 i
b1001 h
b1010110 g
bx f
bx10100110 e
b1101 d
b10010 c
bx b
bx11001010 a
b1101 `
b1111 _
bx ^
bx01001011 ]
b1011 \
b110000 [
bx Z
bx00010000 Y
b1110 X
b1010110 W
bx V
b0xxxxx000000100 U
b1001 T
b10010 S
bx R
bx11000010 Q
b1001 P
b1111 O
bx N
bx01110111 M
b1101 L
b110000 K
bx J
bx01110000 I
b1011 H
b1010110 G
bx F
bx00001010 E
b1110 D
b10010 C
bx B
b0xxxxx010111100 A
bx @
bx ?
bx >
bx =
b1111 <
b110000 ;
b1010110 :
b10010 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
b1111 (
b110000 '
b1010110 &
b10010 %
bx $
bx #
bx "
bx !
$end
#100
b0xxxxx010011000 A
bx11110100 Q
bx11100100 a
bx11011100 q
b10100 %
b10100 9
b10100 C
b10100 S
b10100 c
b10100 s
#200
b0xxxxx000011100 A
bx00010010 Q
bx00011010 a
bx00010110 q
b10 %
b10 9
b10 C
b10 S
b10 c
b10 s
#300
b0xxxxx110000010 A
bx00100011 Q
bx00001111 a
bx01010101 q
b111011 %
b111011 9
b111011 C
b111011 S
b111011 c
b111011 s
#400
