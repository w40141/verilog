$date
	Thu Jun 11 18:04:00 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test $end
$var wire 8 ! y0 [7:0] $end
$var wire 8 " y1 [7:0] $end
$var wire 8 # y2 [7:0] $end
$var wire 8 $ y3 [7:0] $end
$var reg 8 % x0 [7:0] $end
$var reg 8 & x1 [7:0] $end
$var reg 8 ' x2 [7:0] $end
$var reg 8 ( x3 [7:0] $end
$scope module mixCol $end
$var wire 8 ) x0 [7:0] $end
$var wire 8 * x1 [7:0] $end
$var wire 8 + x2 [7:0] $end
$var wire 8 , x3 [7:0] $end
$var wire 8 - y0 [7:0] $end
$var wire 8 . y1 [7:0] $end
$var wire 8 / y2 [7:0] $end
$var wire 8 0 y3 [7:0] $end
$scope function FUNC_2 $end
$var reg 8 1 FUNC_2 [7:0] $end
$var reg 8 2 x [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000111 2
b10101 1
b11101101 0
b10010100 /
b110111 .
b1000111 -
b10100110 ,
b1000110 +
b1101110 *
b10000111 )
b10100110 (
b1000110 '
b1101110 &
b10000111 %
b11101101 $
b10010100 #
b110111 "
b1000111 !
$end
#100
b10100101 $
b10100101 0
b1000000 !
b1000000 -
b11010100 "
b11010100 .
b11100100 #
b11100100 /
b11 1
b10001100 2
b10001100 (
b10001100 ,
b11100111 '
b11100111 +
b1001100 &
b1001100 *
b11110010 %
b11110010 )
#200
b10100110 $
b10100110 0
b10100011 !
b10100011 -
b1110000 "
b1110000 .
b111010 #
b111010 /
b10101011 1
b11011000 2
b11011000 (
b11011000 ,
b1001010 '
b1001010 +
b10010000 &
b10010000 *
b1001101 %
b1001101 )
#300
b10111100 $
b10111100 0
b1001100 !
b1001100 -
b10011111 "
b10011111 .
b1000010 #
b1000010 /
b110001 1
b10010101 2
b10010101 (
b10010101 ,
b11000011 '
b11000011 +
b11101100 &
b11101100 *
b10010111 %
b10010111 )
#400
